type: output
files:
- name: __init__.py
  visible: false
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    1
    3
    0
  learner_created: false
- name: main.py
  visible: true
  placeholders:
  - offset: 188
    length: 26
    placeholder_text: '# TODO написать класс Book'
    dependency:
      section: Атрибуты и методы
      lesson: Лабораторная 2
      task: Класс Book
      file: linked_list.py
      placeholder: 1
      is_visible: false
    initial_state:
      length: 26
      offset: 188
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Book:
          ...
  - offset: 217
    length: 29
    placeholder_text: '# TODO написать класс Library'
    initial_state:
      length: 29
      offset: 217
    initialized_from_dependency: false
    selected: false
    status: Unchecked
    encrypted_possible_answer: |-
      class Library:
          ...
  text: |
    BOOKS_DATABASE = [
        {
            "id": 1,
            "name": "test_name_1",
            "pages": 200,
        },
        {
            "id": 2,
            "name": "test_name_2",
            "pages": 400,
        }
    ]


    # TODO написать класс Book


    # TODO написать класс Library


    if __name__ == '__main__':
        empty_library = Library()  # инициализируем пустую библиотеку
        print(empty_library.get_next_book_id())  # проверяем следующий id для пустой библиотеки

        list_books = [
            Book(id_=book_dict["id"], name=book_dict["name"], pages=book_dict["pages"]) for book_dict in BOOKS_DATABASE
        ]
        library_with_books = Library(books=list_books)  # инициализируем библиотеку с книгами
        print(library_with_books.get_next_book_id())  # проверяем следующий id для непустой библиотеки

        print(library_with_books.get_index_by_book_id(1))  # проверяем индекс книги с id = 1
  learner_created: false
status: Unchecked
record: -1
