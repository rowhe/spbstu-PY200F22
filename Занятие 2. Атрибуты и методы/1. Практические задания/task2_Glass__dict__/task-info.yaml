type: output
files:
- name: main.py
  visible: true
  placeholders:
  - offset: 173
    length: 130
    placeholder_text: |-
      self.capacity_volume = capacity_volume  # объем стакана
              self.occupied_volume = occupied_volume  # объем жидкости в стакане
    initial_state:
      length: 130
      offset: 144
    initialized_from_dependency: false
    selected: true
    status: Failed
    encrypted_possible_answer: |-
      self.capacity_volume = capacity_volume  # объем стакана
              self.occupied_volume = occupied_volume  # объем жидкости в стакане
  text: |
    from typing import Union


    class Glass:
        def __init__(self, capacity_volume: Union[int, float], occupied_volume: Union[int, float]):
            self.capacity_volume = capacity_volume  # объем стакана
            self.occupied_volume = occupied_volume  # объем жидкости в стакане


    if __name__ == "__main__":
        glass = Glass(200, 100)
  learner_created: false
- name: tests/output.txt
  visible: false
  text: |
    {}
    {'capacity_volume': 200, 'occupied_volume': 100}
  learner_created: false
- name: __init__.py
  visible: false
  learner_created: false
status: Failed
feedback:
  message: Incorrect
  time: "Thu, 01 Jun 2023 15:16:23 UTC"
  expected: |
    {}
    {'capacity_volume': 200, 'occupied_volume': 100}
  actual: |
    <bound method Glass.__init__ of <__main__.Glass object at 0x000001EF09017CA0>>
    <bound method Glass.__init__ of <__main__.Glass object at 0x000001EF09017CA0>>
record: -1
